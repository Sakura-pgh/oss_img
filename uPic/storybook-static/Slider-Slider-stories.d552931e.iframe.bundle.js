"use strict";(self.webpackChunk_symphony_common_web_ui=self.webpackChunk_symphony_common_web_ui||[]).push([[6597],{"./src/stories/Input/Slider/Slider.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Slider:()=>Slider_stories_Slider,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Slider_stories});__webpack_require__("./node_modules/react/index.js");var Slider=__webpack_require__("./node_modules/@mui/material/Slider/Slider.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Slider_component_Slider=props=>(0,jsx_runtime.jsx)(Slider.ZP,{"data-testid":"slider",...props});try{Slider_component_Slider.displayName="Slider",Slider_component_Slider.__docgenInfo={description:"",displayName:"Slider",props:{"aria-label":{defaultValue:null,description:"The label of the slider.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"The id of the element containing a label for the slider.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-valuetext":{defaultValue:null,description:"A string value that provides a user-friendly name for the current value of the slider.",name:"aria-valuetext",required:!1,type:{name:"string"}},color:{defaultValue:{value:"'primary'"},description:"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).",name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"error"'},{value:'"info"'},{value:'"success"'},{value:'"warning"'}]}},components:{defaultValue:{value:"{}"},description:"The components used for each slot inside.\n\nThis prop is an alias for the `slots` prop.\nIt's recommended to use the `slots` prop instead.",name:"components",required:!1,type:{name:"{ Root?: ElementType<any>; Track?: ElementType<any>; Rail?: ElementType<any> | undefined; Thumb?: ElementType<any> | undefined; Mark?: ElementType<...> | undefined; MarkLabel?: ElementType<...> | undefined; ValueLabel?: ElementType<...> | undefined; Input?: ElementType<...> | undefined; } | u..."}},componentsProps:{defaultValue:{value:"{}"},description:"The extra props for the slot components.\nYou can override the existing props or add new ones.\n\nThis prop is an alias for the `slotProps` prop.\nIt's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.",name:"componentsProps",required:!1,type:{name:'{ root?: SlotComponentProps<"span", SliderComponentsPropsOverrides, SliderOwnerState>; ... 6 more ...; input?: SlotComponentProps<...>; } | undefined'}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<SliderClasses> & Partial<ClassNameMap<never>>)"}},className:{defaultValue:null,description:"@ignore",name:"className",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"The default value. Use when the component is not controlled.",name:"defaultValue",required:!1,type:{name:"number | number[]"}},disabled:{defaultValue:{value:"false"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},disableSwap:{defaultValue:{value:"false"},description:"If `true`, the active thumb doesn't swap when moving pointer over a thumb while dragging another thumb.",name:"disableSwap",required:!1,type:{name:"boolean"}},getAriaLabel:{defaultValue:null,description:"Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider.\nThis is important for screen reader users.\n@param index The thumb label's index to format.\n@returns",name:"getAriaLabel",required:!1,type:{name:"((index: number) => string)"}},getAriaValueText:{defaultValue:null,description:"Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider.\nThis is important for screen reader users.\n@param value The thumb label's value to format.\n@param index The thumb label's index to format.\n@returns",name:"getAriaValueText",required:!1,type:{name:"((value: number, index: number) => string)"}},marks:{defaultValue:{value:"false"},description:"Marks indicate predetermined values to which the user can move the slider.\nIf `true` the marks are spaced according the value of the `step` prop.\nIf an array, it should contain objects with `value` and an optional `label` keys.",name:"marks",required:!1,type:{name:"boolean | Mark[]"}},max:{defaultValue:{value:"100"},description:"The maximum allowed value of the slider.\nShould not be equal to min.",name:"max",required:!1,type:{name:"number"}},min:{defaultValue:{value:"0"},description:"The minimum allowed value of the slider.\nShould not be equal to max.",name:"min",required:!1,type:{name:"number"}},name:{defaultValue:null,description:"Name attribute of the hidden `input` element.",name:"name",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Callback function that is fired when the slider's value changed.\n@param event The event source of the callback.\nYou can pull out the new value by accessing `event.target.value` (any).\n**Warning**: This is a generic event not a change event.\n@param value The new value.\n@param activeThumb Index of the currently moved thumb.",name:"onChange",required:!1,type:{name:"((event: Event, value: number | number[], activeThumb: number) => void)"}},onChangeCommitted:{defaultValue:null,description:"Callback function that is fired when the `mouseup` is triggered.\n@param event The event source of the callback. **Warning**: This is a generic event not a change event.\n@param value The new value.",name:"onChangeCommitted",required:!1,type:{name:"((event: Event | SyntheticEvent<Element, Event>, value: number | number[]) => void)"}},orientation:{defaultValue:{value:"'horizontal'"},description:"The component orientation.",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},scale:{defaultValue:{value:"function Identity(x) {\nreturn x;\n}"},description:"A transformation function, to change the scale of the slider.\n@param x\n@returns",name:"scale",required:!1,type:{name:"((value: number) => number)"}},size:{defaultValue:{value:"'medium'"},description:"The size of the slider.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'}]}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside the Slider.",name:"slotProps",required:!1,type:{name:'{ root?: SlotComponentProps<"span", SliderComponentsPropsOverrides, SliderOwnerState>; ... 6 more ...; input?: SlotComponentProps<...>; } | undefined'}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside the Slider.\nEither a string to use a HTML element or a component.",name:"slots",required:!1,type:{name:"{ root?: ElementType<any>; track?: ElementType<any>; rail?: ElementType<any> | undefined; thumb?: ElementType<any> | undefined; mark?: ElementType<...> | undefined; markLabel?: ElementType<...> | undefined; valueLabel?: ElementType<...> | undefined; input?: ElementType<...> | undefined; } | u..."}},step:{defaultValue:{value:"1"},description:'The granularity with which the slider can step through values. (A "discrete" slider.)\nThe `min` prop serves as the origin for the valid values.\nWe recommend (max - min) to be evenly divisible by the step.\n\nWhen step is `null`, the thumb can only be slid onto marks provided with the `marks` prop.',name:"step",required:!1,type:{name:"number | null"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},tabIndex:{defaultValue:null,description:"Tab index attribute of the hidden `input` element.",name:"tabIndex",required:!1,type:{name:"number"}},track:{defaultValue:{value:"'normal'"},description:"The track presentation:\n\n- `normal` the track will render a bar representing the slider value.\n- `inverted` the track will render a bar representing the remaining slider value.\n- `false` the track will render without a bar.",name:"track",required:!1,type:{name:'false | "normal" | "inverted"'}},value:{defaultValue:null,description:"The value of the slider.\nFor ranged sliders, provide an array with two values.",name:"value",required:!1,type:{name:"number | number[]"}},valueLabelDisplay:{defaultValue:{value:"'off'"},description:"Controls when the value label is displayed:\n\n- `auto` the value label will display when the thumb is hovered or focused.\n- `on` will display persistently.\n- `off` will never display.",name:"valueLabelDisplay",required:!1,type:{name:"enum",value:[{value:'"auto"'},{value:'"on"'},{value:'"off"'}]}},valueLabelFormat:{defaultValue:{value:"function Identity(x) {\nreturn x;\n}"},description:"The format function the value label's value.\n\nWhen a function is provided, it should have the following signature:\n\n- {number} value The value label's value to format\n- {number} index The value label's index to format\n@param x\n@returns",name:"valueLabelFormat",required:!1,type:{name:"string | ((value: number, index: number) => ReactNode)"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLSpanElement | null) => void) | RefObject<HTMLSpanElement> | null"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Input/Slider/Slider.component.tsx#Slider"]={docgenInfo:Slider_component_Slider.__docgenInfo,name:"Slider",path:"src/stories/Input/Slider/Slider.component.tsx#Slider"})}catch(__react_docgen_typescript_loader_error){}var _Slider$parameters,_Slider$parameters2,_Slider$parameters2$d;const Slider_stories_Slider={args:{"aria-label":"Slider"}},Slider_stories={component:Slider_component_Slider,render:_ref=>{let{...args}=_ref;return(0,jsx_runtime.jsx)(Slider_component_Slider,{...args})}};Slider_stories_Slider.parameters={...Slider_stories_Slider.parameters,docs:{...null===(_Slider$parameters=Slider_stories_Slider.parameters)||void 0===_Slider$parameters?void 0:_Slider$parameters.docs,source:{originalSource:"{\n  args: {\n    'aria-label': 'Slider'\n  }\n}",...null===(_Slider$parameters2=Slider_stories_Slider.parameters)||void 0===_Slider$parameters2||null===(_Slider$parameters2$d=_Slider$parameters2.docs)||void 0===_Slider$parameters2$d?void 0:_Slider$parameters2$d.source}}};const __namedExportsOrder=["Slider"]}}]);