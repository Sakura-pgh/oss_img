"use strict";(self.webpackChunk_symphony_common_web_ui=self.webpackChunk_symphony_common_web_ui||[]).push([[5779],{"./node_modules/@mui/icons-material/FormatAlignLeft.js":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");exports.Z=void 0;var _createSvgIcon=_interopRequireDefault(__webpack_require__("./node_modules/@mui/icons-material/utils/createSvgIcon.js")),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_default=(0,_createSvgIcon.default)((0,_jsxRuntime.jsx)("path",{d:"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z"}),"FormatAlignLeft");exports.Z=_default},"./node_modules/@mui/icons-material/FormatAlignRight.js":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");exports.Z=void 0;var _createSvgIcon=_interopRequireDefault(__webpack_require__("./node_modules/@mui/icons-material/utils/createSvgIcon.js")),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_default=(0,_createSvgIcon.default)((0,_jsxRuntime.jsx)("path",{d:"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z"}),"FormatAlignRight");exports.Z=_default},"./src/stories/Input/Toggle/ToggleButton/ToggleButton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ToggleButton:()=>ToggleButton,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _ToggleButton$paramet,_ToggleButton$paramet2,_ToggleButton$paramet3,_mui_icons_material_FormatAlignLeft__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/icons-material/FormatAlignLeft.js"),_mui_icons_material_FormatAlignRight__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/icons-material/FormatAlignRight.js"),_ToggleButton_component__WEBPACK_IMPORTED_MODULE_1__=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./src/stories/Input/Toggle/ToggleButton/ToggleButton.component.tsx")),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const meta={component:_ToggleButton_component__WEBPACK_IMPORTED_MODULE_1__.C,render:_ref=>{let{...args}=_ref;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ToggleButton_component__WEBPACK_IMPORTED_MODULE_1__.C,{...args,value:"left","aria-label":"left aligned",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_mui_icons_material_FormatAlignLeft__WEBPACK_IMPORTED_MODULE_3__.Z,{sx:{color:"red.main"}})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ToggleButton_component__WEBPACK_IMPORTED_MODULE_1__.C,{...args,value:"right","aria-label":"right aligned",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_mui_icons_material_FormatAlignRight__WEBPACK_IMPORTED_MODULE_4__.Z,{})})]})}},ToggleButton={args:{value:"left","aria-label":"left aligned"}},__WEBPACK_DEFAULT_EXPORT__=meta;ToggleButton.parameters={...ToggleButton.parameters,docs:{...null===(_ToggleButton$paramet=ToggleButton.parameters)||void 0===_ToggleButton$paramet?void 0:_ToggleButton$paramet.docs,source:{originalSource:"{\n  args: {\n    value: 'left',\n    'aria-label': 'left aligned'\n  }\n}",...null===(_ToggleButton$paramet2=ToggleButton.parameters)||void 0===_ToggleButton$paramet2||null===(_ToggleButton$paramet3=_ToggleButton$paramet2.docs)||void 0===_ToggleButton$paramet3?void 0:_ToggleButton$paramet3.source}}};const __namedExportsOrder=["ToggleButton"]},"./src/stories/Input/Toggle/ToggleButton/ToggleButton.component.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{C:()=>ToggleButton_component_ToggleButton});var objectWithoutPropertiesLoose=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"),esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),react=__webpack_require__("./node_modules/react/index.js"),clsx=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),composeClasses=__webpack_require__("./node_modules/@mui/utils/esm/composeClasses/composeClasses.js"),colorManipulator=__webpack_require__("./node_modules/@mui/system/esm/colorManipulator.js"),ButtonBase=__webpack_require__("./node_modules/@mui/material/ButtonBase/ButtonBase.js"),capitalize=__webpack_require__("./node_modules/@mui/material/utils/capitalize.js"),useThemeProps=__webpack_require__("./node_modules/@mui/material/styles/useThemeProps.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),generateUtilityClasses=__webpack_require__("./node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js"),generateUtilityClass=__webpack_require__("./node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js");function getToggleButtonUtilityClass(slot){return(0,generateUtilityClass.Z)("MuiToggleButton",slot)}const ToggleButton_toggleButtonClasses=(0,generateUtilityClasses.Z)("MuiToggleButton",["root","disabled","selected","standard","primary","secondary","sizeSmall","sizeMedium","sizeLarge","fullWidth"]);var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const _excluded=["children","className","color","disabled","disableFocusRipple","fullWidth","onChange","onClick","selected","size","value"],ToggleButtonRoot=(0,styled.ZP)(ButtonBase.Z,{name:"MuiToggleButton",slot:"Root",overridesResolver:(props,styles)=>{const{ownerState}=props;return[styles.root,styles[`size${(0,capitalize.Z)(ownerState.size)}`]]}})((({theme,ownerState})=>{let selectedColorChannel,selectedColor="standard"===ownerState.color?theme.palette.text.primary:theme.palette[ownerState.color].main;return theme.vars&&(selectedColor="standard"===ownerState.color?theme.vars.palette.text.primary:theme.vars.palette[ownerState.color].main,selectedColorChannel="standard"===ownerState.color?theme.vars.palette.text.primaryChannel:theme.vars.palette[ownerState.color].mainChannel),(0,esm_extends.Z)({},theme.typography.button,{borderRadius:(theme.vars||theme).shape.borderRadius,padding:11,border:`1px solid ${(theme.vars||theme).palette.divider}`,color:(theme.vars||theme).palette.action.active},ownerState.fullWidth&&{width:"100%"},{[`&.${ToggleButton_toggleButtonClasses.disabled}`]:{color:(theme.vars||theme).palette.action.disabled,border:`1px solid ${(theme.vars||theme).palette.action.disabledBackground}`},"&:hover":{textDecoration:"none",backgroundColor:theme.vars?`rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})`:(0,colorManipulator.Fq)(theme.palette.text.primary,theme.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},[`&.${ToggleButton_toggleButtonClasses.selected}`]:{color:selectedColor,backgroundColor:theme.vars?`rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})`:(0,colorManipulator.Fq)(selectedColor,theme.palette.action.selectedOpacity),"&:hover":{backgroundColor:theme.vars?`rgba(${selectedColorChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))`:(0,colorManipulator.Fq)(selectedColor,theme.palette.action.selectedOpacity+theme.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:theme.vars?`rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})`:(0,colorManipulator.Fq)(selectedColor,theme.palette.action.selectedOpacity)}}}},"small"===ownerState.size&&{padding:7,fontSize:theme.typography.pxToRem(13)},"large"===ownerState.size&&{padding:15,fontSize:theme.typography.pxToRem(15)})})),ToggleButton_ToggleButton=react.forwardRef((function ToggleButton(inProps,ref){const props=(0,useThemeProps.Z)({props:inProps,name:"MuiToggleButton"}),{children,className,color="standard",disabled=!1,disableFocusRipple=!1,fullWidth=!1,onChange,onClick,selected,size="medium",value}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,_excluded),ownerState=(0,esm_extends.Z)({},props,{color,disabled,disableFocusRipple,fullWidth,size}),classes=(ownerState=>{const{classes,fullWidth,selected,disabled,size,color}=ownerState,slots={root:["root",selected&&"selected",disabled&&"disabled",fullWidth&&"fullWidth",`size${(0,capitalize.Z)(size)}`,color]};return(0,composeClasses.Z)(slots,getToggleButtonUtilityClass,classes)})(ownerState);return(0,jsx_runtime.jsx)(ToggleButtonRoot,(0,esm_extends.Z)({className:(0,clsx.Z)(classes.root,className),disabled,focusRipple:!disableFocusRipple,ref,onClick:event=>{onClick&&(onClick(event,value),event.defaultPrevented)||onChange&&onChange(event,value)},onChange,value,ownerState,"aria-pressed":selected},other,{children}))})),ToggleButton_component_ToggleButton=props=>(0,jsx_runtime.jsx)(ToggleButton_ToggleButton,{"data-testid":"toggleButton",...props});try{ToggleButton_component_ToggleButton.displayName="ToggleButton",ToggleButton_component_ToggleButton.__docgenInfo={description:"",displayName:"ToggleButton",props:{children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<ToggleButtonClasses> & Partial<ClassNameMap<never>>)"}},color:{defaultValue:{value:"'standard'"},description:"The color of the button when it is in an active state.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).",name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"error"'},{value:'"info"'},{value:'"success"'},{value:'"warning"'},{value:'"standard"'}]}},disabled:{defaultValue:{value:"false\nfalse"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},disableFocusRipple:{defaultValue:{value:"false"},description:"If `true`, the  keyboard focus ripple is disabled.",name:"disableFocusRipple",required:!1,type:{name:"boolean"}},fullWidth:{defaultValue:{value:"false"},description:"If `true`, the button will take up the full width of its container.",name:"fullWidth",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Callback fired when the state changes.\n@param event The event source of the callback.\n@param value of the selected button.",name:"onChange",required:!1,type:{name:"((event: MouseEvent<HTMLElement, MouseEvent>, value: any) => void)"}},onClick:{defaultValue:null,description:"Callback fired when the button is clicked.\n@param event The event source of the callback.\n@param value of the selected button.",name:"onClick",required:!1,type:{name:"((event: MouseEvent<HTMLElement, MouseEvent>, value: any) => void)"}},selected:{defaultValue:null,description:"If `true`, the button is rendered in an active state.",name:"selected",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'medium'"},description:"The size of the component.\nThe prop defaults to the value inherited from the parent ToggleButtonGroup component.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},value:{defaultValue:null,description:"The value to associate with the button when selected in a\nToggleButtonGroup.",name:"value",required:!0,type:{name:"{}"}},tabIndex:{defaultValue:{value:"0"},description:"",name:"tabIndex",required:!1,type:{name:"number"}},action:{defaultValue:null,description:"A ref for imperative actions.\nIt currently only supports `focusVisible()` action.",name:"action",required:!1,type:{name:"Ref<ButtonBaseActions>"}},centerRipple:{defaultValue:{value:"false"},description:"If `true`, the ripples are centered.\nThey won't start at the cursor interaction position.",name:"centerRipple",required:!1,type:{name:"boolean"}},disableRipple:{defaultValue:{value:"false"},description:"If `true`, the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the `.Mui-focusVisible` class.",name:"disableRipple",required:!1,type:{name:"boolean"}},disableTouchRipple:{defaultValue:{value:"false"},description:"If `true`, the touch ripple effect is disabled.",name:"disableTouchRipple",required:!1,type:{name:"boolean"}},focusRipple:{defaultValue:{value:"false"},description:"If `true`, the base button will have a keyboard focus ripple.",name:"focusRipple",required:!1,type:{name:"boolean"}},focusVisibleClassName:{defaultValue:null,description:"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\nif needed.",name:"focusVisibleClassName",required:!1,type:{name:"string"}},LinkComponent:{defaultValue:{value:"'a'"},description:"The component used to render a link when the `href` prop is provided.",name:"LinkComponent",required:!1,type:{name:"ElementType<any>"}},onFocusVisible:{defaultValue:null,description:"Callback fired when the component is focused with a keyboard.\nWe trigger a `onFocus` callback too.",name:"onFocusVisible",required:!1,type:{name:"FocusEventHandler<any>"}},TouchRippleProps:{defaultValue:null,description:"Props applied to the `TouchRipple` element.",name:"TouchRippleProps",required:!1,type:{name:"Partial<TouchRippleProps>"}},touchRippleRef:{defaultValue:null,description:"A ref that points to the `TouchRipple` element.",name:"touchRippleRef",required:!1,type:{name:"Ref<TouchRippleActions>"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Input/Toggle/ToggleButton/ToggleButton.component.tsx#ToggleButton"]={docgenInfo:ToggleButton_component_ToggleButton.__docgenInfo,name:"ToggleButton",path:"src/stories/Input/Toggle/ToggleButton/ToggleButton.component.tsx#ToggleButton"})}catch(__react_docgen_typescript_loader_error){}}}]);