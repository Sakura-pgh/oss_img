"use strict";(self.webpackChunk_symphony_common_web_ui=self.webpackChunk_symphony_common_web_ui||[]).push([[9461],{"./src/stories/DataDisplay/Badge/Badge.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Badge:()=>Badge,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _Badge$parameters,_Badge$parameters2,_Badge$parameters2$do,_mui_icons_material_Mail__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/icons-material/Mail.js"),_Badge_component__WEBPACK_IMPORTED_MODULE_1__=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./src/stories/DataDisplay/Badge/Badge.component.tsx")),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const meta={component:_Badge_component__WEBPACK_IMPORTED_MODULE_1__.C,render:_ref=>{let{...args}=_ref;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_Badge_component__WEBPACK_IMPORTED_MODULE_1__.C,{...args,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_mui_icons_material_Mail__WEBPACK_IMPORTED_MODULE_3__.Z,{color:"primary"})})}},Badge={args:{badgeContent:4}},__WEBPACK_DEFAULT_EXPORT__=meta;Badge.parameters={...Badge.parameters,docs:{...null===(_Badge$parameters=Badge.parameters)||void 0===_Badge$parameters?void 0:_Badge$parameters.docs,source:{originalSource:"{\n  args: {\n    badgeContent: 4\n  }\n}",...null===(_Badge$parameters2=Badge.parameters)||void 0===_Badge$parameters2||null===(_Badge$parameters2$do=_Badge$parameters2.docs)||void 0===_Badge$parameters2$do?void 0:_Badge$parameters2$do.source}}};const __namedExportsOrder=["Badge"]},"./src/stories/DataDisplay/Badge/Badge.component.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{C:()=>Badge});var _mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/material/Badge/Badge.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./node_modules/react/jsx-runtime.js"));const Badge=props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material__WEBPACK_IMPORTED_MODULE_2__.Z,{"data-testid":"badge",...props});try{Badge.displayName="Badge",Badge.__docgenInfo={description:"",displayName:"Badge",props:{anchorOrigin:{defaultValue:{value:"{\nvertical: 'top',\nhorizontal: 'right',\n}"},description:"The anchor of the badge.",name:"anchorOrigin",required:!1,type:{name:"BadgeOrigin"}},badgeContent:{defaultValue:null,description:"The content rendered within the badge.",name:"badgeContent",required:!1,type:{name:"ReactNode"}},children:{defaultValue:null,description:"The badge will be added relative to this node.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<BadgeClasses> & Partial<ClassNameMap<never>>)"}},className:{defaultValue:null,description:"@ignore",name:"className",required:!1,type:{name:"string"}},color:{defaultValue:{value:"'default'"},description:"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).",name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"error"'},{value:'"info"'},{value:'"success"'},{value:'"warning"'},{value:'"default"'}]}},componentsProps:{defaultValue:{value:"{}"},description:"The extra props for the slot components.\nYou can override the existing props or add new ones.\n\nThis prop is an alias for the `slotProps` prop.\nIt's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.",name:"componentsProps",required:!1,type:{name:'{ root?: SlotComponentProps<"span", BadgeRootSlotPropsOverrides, { anchorOrigin: BadgeOrigin; badgeContent: ReactNode; children?: ReactNode; ... 13 more ...; displayValue: ReactNode; }>; badge?: SlotComponentProps<...>; } | undefined'}},components:{defaultValue:{value:"{}"},description:"The components used for each slot inside.\n\nThis prop is an alias for the `slots` prop.\nIt's recommended to use the `slots` prop instead.",name:"components",required:!1,type:{name:"{ Root?: ElementType<any>; Badge?: ElementType<any>; } | undefined"}},invisible:{defaultValue:{value:"false"},description:"If `true`, the badge is invisible.",name:"invisible",required:!1,type:{name:"boolean"}},max:{defaultValue:{value:"99"},description:"Max count to show.",name:"max",required:!1,type:{name:"number"}},overlap:{defaultValue:{value:"'rectangular'"},description:"Wrapped shape the badge should overlap.",name:"overlap",required:!1,type:{name:"enum",value:[{value:'"rectangular"'},{value:'"circular"'}]}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside the Badge.",name:"slotProps",required:!1,type:{name:'{ root?: SlotComponentProps<"span", BadgeRootSlotPropsOverrides, { anchorOrigin: BadgeOrigin; badgeContent: ReactNode; children?: ReactNode; ... 13 more ...; displayValue: ReactNode; }>; badge?: SlotComponentProps<...>; } | undefined'}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside the Badge.\nEither a string to use a HTML element or a component.",name:"slots",required:!1,type:{name:"{ root?: ElementType<any>; badge?: ElementType<any>; } | undefined"}},showZero:{defaultValue:{value:"false"},description:"Controls whether the badge is hidden when `badgeContent` is zero.",name:"showZero",required:!1,type:{name:"boolean"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},variant:{defaultValue:{value:"'standard'"},description:"The variant to use.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"dot"'},{value:'"standard"'}]}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLSpanElement | null) => void) | RefObject<HTMLSpanElement> | null"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/DataDisplay/Badge/Badge.component.tsx#Badge"]={docgenInfo:Badge.__docgenInfo,name:"Badge",path:"src/stories/DataDisplay/Badge/Badge.component.tsx#Badge"})}catch(__react_docgen_typescript_loader_error){}}}]);