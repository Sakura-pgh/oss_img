{"version":3,"file":"685.pulse-portal-roles-permissions.js","mappings":"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","sources":["webpack://roles-permissions/./src/components/Breadcrumbs.tsx","webpack://roles-permissions/./src/components/HeaderBreadcrumbs.tsx","webpack://roles-permissions/./src/components/Page.tsx","webpack://roles-permissions/./src/hooks/useTable.ts","webpack://roles-permissions/./src/sections/role/roles/RoleTableRow.tsx","webpack://roles-permissions/./src/utils/formatTime.ts","webpack://roles-permissions/./src/pages/Roles.tsx","webpack://roles-permissions/./src/redux/services/roles.ts","webpack://roles-permissions/./src/routes/paths.ts"],"sourcesContent":["import { ReactElement } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport {\n  Box,\n  Link,\n  Typography,\n  BreadcrumbsProps,\n  Breadcrumbs as PRUBreadcrumbs,\n} from 'pulse-portal-styleguide';\n\n// ----------------------------------------------------------------------\n\ntype TLink = {\n  href?: string;\n  name: string;\n  icon?: ReactElement;\n};\n\nexport interface Props extends BreadcrumbsProps {\n  links: TLink[];\n  activeLast?: boolean;\n}\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }: Props) {\n  const currentLink = links[links.length - 1].name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <PRUBreadcrumbs\n      separator={\n        <Box\n          component=\"span\"\n          sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\n        />\n      }\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </PRUBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ntype LinkItemProps = {\n  link: TLink;\n};\n\nfunction LinkItem({ link }: LinkItemProps) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import { ReactNode } from 'react';\n// @mui\nimport { Box, Typography, Link } from 'pulse-portal-styleguide';\n//\nimport Breadcrumbs, { Props as BreadcrumbsProps } from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends BreadcrumbsProps {\n  action?: ReactNode;\n  heading: string;\n  moreLink?: string | string[];\n}\n\nexport default function HeaderBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink = '' || [],\n  sx,\n  ...other\n}: Props) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {typeof moreLink === 'string' ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\nimport { forwardRef, ReactNode } from 'react';\n// @mui\nimport { Box, BoxProps } from 'pulse-portal-styleguide';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends BoxProps {\n  children: ReactNode;\n  meta?: ReactNode;\n  title: string;\n}\n\nconst Page = forwardRef<HTMLDivElement, Props>(({ children, title = '', meta, ...other }, ref) => (\n  <>\n    <Helmet>\n      <title>{`${title} | Pulse Portal`}</title>\n      {meta}\n    </Helmet>\n\n    <Box ref={ref} {...other}>\n      {children}\n    </Box>\n  </>\n));\n\nexport default Page;\n","import { useState } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport type UseTableProps = {\n  dense: boolean;\n  page: number;\n  setPage: React.Dispatch<React.SetStateAction<number>>;\n  rowsPerPage: number;\n  order: 'asc' | 'desc';\n  orderBy: string;\n  //\n  selected: string[];\n  setSelected: React.Dispatch<React.SetStateAction<string[]>>;\n  onSelectRow: (id: string) => void;\n  onSelectAllRows: (checked: boolean, newSelecteds: string[]) => void;\n  //\n  onSort: (id: string) => void;\n  onChangePage: (event: unknown, newPage: number) => void;\n  onChangeRowsPerPage: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onChangeDense: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport type Props = {\n  defaultDense?: boolean;\n  defaultOrder?: 'asc' | 'desc';\n  defaultOrderBy?: string;\n  defaultSelected?: string[];\n  defaultRowsPerPage?: number;\n  defaultCurrentPage?: number;\n};\n\nexport default function useTable(props?: Props) {\n  const [dense, setDense] = useState(props?.defaultDense || false);\n\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\n\n  const [order, setOrder] = useState<'asc' | 'desc'>(props?.defaultOrder || 'asc');\n\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\n\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\n\n  const [selected, setSelected] = useState<string[]>(props?.defaultSelected || []);\n\n  const onSort = (id: string) => {\n    const isAsc = orderBy === id && order === 'asc';\n    if (id !== '') {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(id);\n    }\n  };\n\n  const onSelectRow = (id: string) => {\n    const selectedIndex = selected.indexOf(id);\n\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const onSelectAllRows = (checked: boolean, newSelecteds: string[]) => {\n    if (checked) {\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const onChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const onChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const onChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDense(event.target.checked);\n  };\n\n  return {\n    dense,\n    order,\n    page,\n    setPage,\n    orderBy,\n    rowsPerPage,\n    //\n    selected,\n    setSelected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangePage,\n    onChangeDense,\n    onChangeRowsPerPage,\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function getComparator<Key extends keyof any>(\n  order: 'asc' | 'desc',\n  orderBy: Key\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function emptyRows(page: number, rowsPerPage: number, arrayLength: number) {\n  return page > 0 ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\n}\n","// @mui\nimport { TableRow, Checkbox, TableCell, Typography, MenuItem, Button } from 'pulse-portal-styleguide';\n// utils\nimport { fDateTime } from '../../../utils/formatTime';\n// @types\nimport { Role } from '../../../@types/role';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  row: Role;\n  selected: boolean;\n  onEditRow: VoidFunction;\n  onSelectRow: VoidFunction;\n  onDeleteRow: VoidFunction;\n};\n\nexport default function RoleTableRow({\n  row,\n  selected,\n  onEditRow,\n}: Props) {\n  const { id, name, description, updatedBy, updatedTime } = row;\n\n  return (\n    <TableRow hover selected={selected} sx={{wordBreak: 'break-word'}}>\n      \n      <TableCell>{name}</TableCell>\n\n      <TableCell>{id}</TableCell>\n\n      <TableCell>{description}</TableCell>\n\n      <TableCell>{updatedBy}</TableCell>\n\n      <TableCell>{updatedTime && fDateTime(updatedTime)}</TableCell>\n\n      <TableCell align=\"center\">\n        <Button \n          color=\"info\"\n          onClick={() => {\n            onEditRow();\n          }}\n        >\n          Details\n        </Button>\n      </TableCell>\n    </TableRow>\n  );\n}\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\n\n// ----------------------------------------------------------------------\n\nexport function fDate(date: Date | string | number) {\n  return format(new Date(date), 'dd MMMM yyyy');\n}\n\nexport function fDateTime(date: Date | string | number) {\n  return format(new Date(date), 'MMM dd, yyyy, HH:mm');\n}\n\nexport function fTimestamp(date: Date | string | number) {\n  return getTime(new Date(date));\n}\n\nexport function fDateTimeSuffix(date: Date | string | number) {\n  return format(new Date(date), 'dd/MM/yyyy hh:mm p');\n}\n\nexport function fToNow(date: Date | string | number) {\n  return formatDistanceToNow(new Date(date), {\n    addSuffix: true\n  });\n}\n","// @mui\nimport {\n  Box,\n  Card, Container, Table, TableBody, TableContainer,\n  TablePagination\n} from 'pulse-portal-styleguide';\nimport { paramCase } from 'change-case';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// @types\nimport { Role } from '../@types/role';\n// import { HeaderBreadcrumbs } from 'pulse-portal-styleguide';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\n// components\nimport Page from '../components/Page';\nimport { Scrollbar } from 'pulse-portal-styleguide';\nimport {\n  TableEmptyRows,\n  TableHeadCustom,\n  TableNoData,\n  TableSkeleton\n} from 'pulse-portal-styleguide';\n// hooks\nimport useTable, { emptyRows, getComparator } from '../hooks/useTable';\n// redux\nimport { useDispatch, useSelector } from '../redux/store';\n// routes\nimport { PATH_HOME } from '../routes/paths';\n// sections\nimport {\n  RoleTableRow\n} from '../sections/role/roles';\nimport { useGetRolesQuery } from '../redux/services/roles';\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'role', label: 'Role', align: 'left' },\n  { id: 'id', label: 'Role ID', align: 'left' },\n  { id: 'description', label: 'Description', align: 'left' },\n  { id: 'lastEditor', label: 'Last Editor', align: 'left' },\n  { id: 'lastEditTime', label: 'Last Edit Time', align: 'left' },\n  { id: '', label: 'Actions', align: 'center' },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function Roles() {\n  const {\n    dense,\n    page,\n    order,\n    orderBy,\n    rowsPerPage,\n    setPage,\n    //\n    selected,\n    setSelected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangePage,\n    onChangeRowsPerPage,\n  } = useTable();\n\n  const { appName } = useSelector((state) => state.main);\n\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const [tableData, setTableData] = useState<Role[]>([]);\n\n  const [filterName, setFilterName] = useState('');\n\n  const { data, isLoading, isFetching } = useGetRolesQuery({page, rowsPerPage});\n\n\n  useEffect(() => {\n    if (data?.records) {\n      setTableData(data.records);\n    }\n  }, [data]);\n\n  const handleFilterName = (filterName: string) => {\n    setFilterName(filterName);\n    setPage(0);\n  };\n\n  const handleDeleteRow = (id: string) => {\n    const deleteRow = tableData.filter((row) => row.id !== id);\n    setSelected([]);\n    setTableData(deleteRow);\n  };\n\n  const handleDeleteRows = (selected: string[]) => {\n    const deleteRows = tableData.filter((row) => !selected.includes(row.id));\n    setSelected([]);\n    setTableData(deleteRows);\n  };\n\n  const handleEditRow = (id: string) => {\n    navigate(PATH_HOME.role.edit(appName, paramCase(id)));\n  };\n\n  const dataFiltered = applySortFilter({\n    tableData,\n    comparator: getComparator(order, orderBy),\n    filterName,\n  });\n\n  const denseHeight = dense ? 60 : 80;\n\n  const isNotFound = (!dataFiltered.length && !!filterName) || (!isLoading && !dataFiltered.length);\n\n  return (\n    <Page title=\"Home: Roles & Permissions\">\n      <Container maxWidth={'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Roles & Permissions\"\n          links={[\n            { name: 'Home', href: PATH_HOME.root },\n            { name: 'Roles & Permissions Management' },\n          ]}\n          // action={\n          //   <Button\n          //     variant=\"contained\"\n          //     startIcon={<Iconify icon=\"eva:plus-fill\" />}\n          //     component={RouterLink}\n          //     to={PATH_HOME.rp.new}\n          //   >\n          //     Create New Role\n          //   </Button>\n          // }\n        />\n\n        <Card>\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 960, position: 'relative' }}>\n              <Table size={dense ? 'small' : 'medium'} sx={{mt: 1}}>\n                <TableHeadCustom\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={tableData.length}\n                  numSelected={selected.length}\n                  // onSelectAllRows={(checked) =>\n                  //   onSelectAllRows(\n                  //     checked,\n                  //     tableData.map((row) => row.id)\n                  //   )\n                  // }\n                />\n\n                <TableBody>\n                  {(isLoading ? [...Array(rowsPerPage)] : tableData)\n                    .map((row, index) =>\n                      row ? (\n                        <RoleTableRow\n                          key={row.id}\n                          row={row}\n                          selected={selected.includes(row.id)}\n                          onSelectRow={() => onSelectRow(row.id)}\n                          onDeleteRow={() => handleDeleteRow(row.id)}\n                          onEditRow={() => handleEditRow(row.id)}\n                        />\n                      ) : (\n                        !isNotFound && <TableSkeleton key={index} sx={{ height: denseHeight }} />\n                      )\n                    )}\n\n                  <TableNoData isNotFound={isNotFound} />\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <Box sx={{ position: 'relative' }}>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={data?.paging.total || 0}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={onChangePage}\n              onRowsPerPageChange={onChangeRowsPerPage}\n            />\n          </Box>\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction applySortFilter({\n  tableData,\n  comparator,\n  filterName,\n}: {\n  tableData: Role[];\n  comparator: (a: any, b: any) => number;\n  filterName: string;\n}) {\n  const stabilizedThis = tableData.map((el, index) => [el, index] as const);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  tableData = stabilizedThis.map((el) => el[0]);\n\n  if (filterName) {\n    tableData = tableData.filter(\n      (item: Record<string, any>) =>\n        item.name.toLowerCase().indexOf(filterName.toLowerCase()) !== -1\n    );\n  }\n\n  return tableData;\n}\n","import { Role } from 'src/@types/role'\nimport { api } from './api'\n\ntype RolesResponse = {\n  records: Role[],\n  paging: {pageIndex: number, itemsPerPage: number, total: number, pages: number};\n}\n\nexport const rolesApi = api.injectEndpoints({\n  endpoints: (build) => ({\n    getRoles: build.query<RolesResponse, { page: number, rowsPerPage: number }>({\n      query: ({page, rowsPerPage}) => ({\n        url: `roles`,\n        method: 'GET',\n        params: {\n          pageIndex: page + 1,\n          itemsPerPage: rowsPerPage,\n        },\n      }),\n      providesTags: (result) =>\n        result ? result.records.map(({ id }) => ({ type: 'Roles', id })) : ['Roles'],\n    }),\n    addRole: build.mutation<Role, Partial<Role>>({\n      query: (body) => ({\n        url: `roles`,\n        method: 'POST',\n        body,\n      }),\n      invalidatesTags: [{ type: 'Roles', id: 'LIST' }],\n    }),\n    getRole: build.query<Role, string>({\n      query: (id) => `roles/${id}`,\n      providesTags: (_role, _err, id) => [{ type: 'Roles', id }],\n    }),\n    updateRole: build.mutation<Role, Partial<Role>>({\n      query: (data) => {\n        const { id, ...body } = data\n        return {\n          url: `roles/${id}`,\n          method: 'PUT',\n          body,\n        }\n      },\n      invalidatesTags: (role) => [{ type: 'Roles', id: role?.id }],\n    }),\n    deleteRole: build.mutation<{ success: boolean; id: number }, number>({\n      query(id) {\n        return {\n          url: `posts/${id}`,\n          method: 'DELETE',\n        }\n      },\n      invalidatesTags: (role) => [{ type: 'Roles', id: role?.id }],\n    }),\n  }),\n})\n\nexport const {\n  useGetRoleQuery,\n  useGetRolesQuery,\n  useUpdateRoleMutation,\n} = rolesApi\n","// ----------------------------------------------------------------------\n\nfunction path(appName: string, sublink: string) {\n  return `/${appName}${sublink}`;\n}\n\n// ----------------------------------------------------------------------\n\nexport const PATH_HOME = {\n  root: '/',\n  role: {\n    root: (appName:string) => path(appName, '/list'),\n    edit: (appName:string, name: string) => path(appName, `/list/${name}/edit`),\n  },\n};"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","target","rel","noWrap","Page","forwardRef","ref","children","title","meta","descendingComparator","a","b","orderBy","getComparator","order","RoleTableRow","date","row","selected","onEditRow","id","description","updatedBy","updatedTime","TableRow","hover","wordBreak","TableCell","format","Date","align","Button","onClick","TABLE_HEAD","label","Roles","props","useState","dense","setDense","setOrderBy","setOrder","page","setPage","rowsPerPage","setRowsPerPage","setSelected","onSelectRow","selectedIndex","indexOf","newSelected","concat","slice","onSelectAllRows","checked","newSelecteds","onSort","onChangePage","event","newPage","onChangeDense","onChangeRowsPerPage","parseInt","value","useTable","appName","useSelector","state","main","navigate","useNavigate","useDispatch","tableData","setTableData","filterName","useGetRolesQuery","data","isLoading","isFetching","useEffect","records","dataFiltered","comparator","stabilizedThis","el","index","sort","filter","item","toLowerCase","applySortFilter","denseHeight","isNotFound","Container","PATH_HOME","Card","Scrollbar","TableContainer","minWidth","position","Table","size","TableHeadCustom","headLabel","rowCount","numSelected","TableBody","Array","includes","onDeleteRow","deleteRow","paramCase","TableSkeleton","TableNoData","TablePagination","rowsPerPageOptions","count","paging","total","onPageChange","onRowsPerPageChange","rolesApi","api","endpoints","build","getRoles","query","url","method","params","pageIndex","itemsPerPage","providesTags","result","type","addRole","mutation","body","invalidatesTags","getRole","_role","_err","updateRole","role","deleteRole","useGetRoleQuery","useUpdateRoleMutation","path","sublink","root","edit"],"sourceRoot":""}